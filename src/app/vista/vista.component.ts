import { Component, OnInit,ViewChild, ElementRef, AfterViewInit } from '@angular/core';
import { from } from 'rxjs';
import{DataService} from '../data.service';

@Component({
  selector: 'app-vista',
  templateUrl: './vista.component.html',
  styleUrls: ['./vista.component.css']
})
export class VistaComponent implements OnInit, AfterViewInit {
  @ViewChild('imprimir') imprimir: ElementRef;

  @ViewChild('tipo') tipo: ElementRef;
  @ViewChild('servidor') servidor: ElementRef;
  @ViewChild('puerto') puerto: ElementRef;
  @ViewChild('BD') BD: ElementRef;
  @ViewChild('usuario') usuario: ElementRef;
  @ViewChild('clave') clave: ElementRef;
  @ViewChild('esquema') esquema: ElementRef;



  constructor(private dataService: DataService) { 
  
  }
  ngAfterViewInit(): void {
 
  }

  ngOnInit(): void {
    
  }
  generarCruds(){

    let variables:any = {
      esquema: this.esquema.nativeElement.value,
      tipo: this.tipo.nativeElement.value,
      servidor: this.servidor.nativeElement.value,
      puerto: this.puerto.nativeElement.value,
      BD: this.BD.nativeElement.value,
      usuario: this.usuario.nativeElement.value,
      clave: this.clave.nativeElement.value
    };
    

    this.dataService.generateDel(variables).subscribe(data=>{
      console.log(data);
      let resultado: any = data;
      let imprimir: any = resultado[0][""];
      
      this.dataService.generateRet(variables).subscribe(data=>{
        resultado = data;
        imprimir = imprimir + '\n\n',
        imprimir = imprimir + resultado[0][""];

        this.dataService.generateIns(variables).subscribe(data=>{
          resultado = data;
          imprimir = imprimir + '\n\n',
          imprimir = imprimir + resultado[0][""];
          
          
          this.dataService.generateUpd(variables).subscribe(data=>{
            resultado = data;
            imprimir = imprimir + '\n\n',
            imprimir = imprimir + resultado[0][""];
            this.imprimir.nativeElement.value = imprimir;        
          }) 
        })      
      })   
    })
  }

  autoGenerarCruds(){

    let variables:any = {
      esquema: this.esquema.nativeElement.value,
      tipo: this.tipo.nativeElement.value,
      servidor: this.servidor.nativeElement.value,
      puerto: this.puerto.nativeElement.value,
      BD: this.BD.nativeElement.value,
      usuario: this.usuario.nativeElement.value,
      clave: this.clave.nativeElement.value
    };
    

    this.dataService.autoGenerateDel(variables).subscribe(data=>{
      console.log(data);
      let resultado: any = data;
      let imprimir: any = resultado[0][""];
      
      this.dataService.autoGenerateRet(variables).subscribe(data=>{
        resultado = data;
        imprimir = imprimir + '\n\n',
        imprimir = imprimir + resultado[0][""];

        this.dataService.autoGenerateIns(variables).subscribe(data=>{
          resultado = data;
          imprimir = imprimir + '\n\n',
          imprimir = imprimir + resultado[0][""];
          


          this.dataService.autoGenerateUpd(variables).subscribe(data=>{
            resultado = data;
            imprimir = imprimir + '\n\n',
            imprimir = imprimir + resultado[0][""];
            this.imprimir.nativeElement.value = imprimir;
            
            
          })         
        })      
      })   
    })
  }

}
